#include <NeuralNetwork.h>
#include <Wire.h>
#include <Adafruit_TCS34725.h>

#define LEDB 7

Adafruit_TCS34725 tcs = Adafruit_TCS34725(TCS34725_INTEGRATIONTIME_50MS, TCS34725_GAIN_4X);

const unsigned int couches[] = {3, 12, 12, 1};
float *sorties;

/*
const float entrees[6][3] = {
  {0.64, 0.18, 0.18}, // ROUGE
  {0.26, 0.50, 0.24}, // VERT
  {0.13, 0.35, 0.51}, // BLEU
  {0.43, 0.41, 0.17}, // JAUNE
  {0.30, 0.29, 0.41}, // VIOLET
  {0.58, 0.26, 0.15}, // ORANGE
};
*/

float entrees[3];

const float biais[] = {1.00, 1.00, 1.07};

// 3*12 + 12*12 + 12*1
const float poids[] = {
  -3.2345151, 0.1309597, 0.5248704,
  1.7743554, -1.1128615, -1.0229023,
  1.0439237, -0.9548942, -0.7500634,
  -0.2013842, -0.2736966, 0.6675353,
  1.3244508, -0.5756721, 0.0717406,
  1.2812261, -1.0434827, 0.1039599,
  0.0799494, -0.1168651, 0.4985597,
  -0.0033359, 0.4396488, 0.0837857,
  -1.7958540, 0.0385646, -0.3189595,
  -0.7197753, -0.6555705, 0.1462377,
  1.8314944, -0.9454978, -1.2856529,
  -2.2472562, 0.3385596, 0.6582292,

  0.2504118, -0.0748784, 0.1988482, 0.3846305, -0.1931987, -0.2184220, 0.4247591, 0.8196946, 0.7680702, -0.4695768, 0.5541190, 0.8695870,
  0.5016391, -0.3038916, 0.0342278, 0.0589705, 0.1627688, 0.1904305, -0.6407276, -0.1182652, -0.0600728, -0.1725170, -0.8090185, 0.2743827,
  2.0405766, -1.4764641, -0.1413182, -0.3740782, -1.1956558, -0.6935209, -0.4548573, -0.0658056, 0.2264159, 0.6869005, -0.4933598, 1.5914235,
  1.1155270, -0.8572950, -0.8008734, -0.6697721, -0.5013657, -0.1460065, -0.4328084, 0.7530125, -0.0634269, 0.3862528, -0.7250428, 0.6111167,
  0.2705692, 0.1760945, -0.1719677, -0.1129410, 0.6726030, -0.9636604, -0.8179512, -0.0434211, 0.4941928, 0.0682246, -0.6848159, 0.8007918,
  0.9544466, -0.6757089, -1.0301469, 0.8338283, -0.7996262, -0.4537288, 0.2324169, 0.0687901, 1.4843548, -0.6338199, -1.5104135, 0.4744215,
  -1.7229041, -0.1798249, 0.8212229, -0.3724416, 0.0407116, 0.9176830, 0.1829736, 0.5380781, -1.4646476, -0.7382750, 1.0299470, -1.6410176,
  -1.0853009, 1.3814204, 0.6354837, 0.0697226, 0.4225459, 0.1417617, -0.1362197, -0.6431421, -1.2836674, -0.4104369, -0.0603579, -1.0465948,
  1.0762183, -0.1442365, 0.6064275, 0.5933339, -0.9387536, -0.9469555, -0.0846194, -0.6753968, 0.0977126, 0.0045570, -1.2911614, 0.6011035,
  -0.9536161, 0.6358527, 0.8789533, -0.1719329, 0.8641534, -0.5096537, -0.8671501, -0.4959279, -0.1789059, -0.7331338, 0.6689547, -0.4755179,
  0.6226391, 0.1799965, -0.3603446, -0.9016899, 0.4566050, -0.9944236, 0.2678848, 0.5542941, 0.1134568, -0.2819874, -0.5971943, -0.1648310,
  1.5341858, -0.9963873, -0.8347433, -0.4640187, 0.0578763, -0.9646052, 0.5995245, 0.2797670, -0.3659082, 0.7878527, -0.6523962, -0.4423539,

  0.8991649, -0.6896954, -3.0657675, -1.5418012, -0.5206811, -2.5220344, 3.0342688, 2.4633121, -1.7153653, 1.5582633, -0.4350041, -1.4809799
};

NeuralNetwork NN(couches, poids, biais, 4);

void setup() {
  Serial.begin(115200);

  pinMode(7, LEDB);

  if (!tcs.begin()) {
    Serial.println("Erreur TCS34725 !");
    while (1);
  }

/*
  for (int i = 0; i < 6; i++) {
    sorties = NN.FeedForward(entrees[i]);
    Serial.print(sorties[0]>0.5?"Chaud (":"Froid (");
    Serial.print(sorties[0], 7);
    Serial.println(")");
  }
*/
}

void loop() {
  uint16_t rouge, vert, bleu, tout;

  digitalWrite(LEDB, HIGH);
  delay(300);
  tcs.getRawData(&rouge, &vert, &bleu, &tout);
  digitalWrite(LEDB, LOW);

  entrees[0]=(rouge*1.0)/(rouge+vert+bleu);
  entrees[1]=(vert*1.0)/(rouge+vert+bleu);
  entrees[2]=(bleu*1.0)/(rouge+vert+bleu);

  sorties = NN.FeedForward(entrees);

  Serial.print(rouge); Serial.print("/");
  Serial.print(vert); Serial.print("/");
  Serial.print(bleu); Serial.print("  ");
  Serial.print(sorties[0]>0.5?"Chaud (":"Froid (");
  Serial.print(sorties[0], 7);
  Serial.println(")");
  delay(500);
}
